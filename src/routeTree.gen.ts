/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as FormRouteImport } from './routes/form'
import { Route as BookRouteImport } from './routes/book'
import { Route as IndexRouteImport } from './routes/index'
import { Route as BookChar123BookIdChar125RouteImport } from './routes/book.{-$bookId}'

const FormRoute = FormRouteImport.update({
  id: '/form',
  path: '/form',
  getParentRoute: () => rootRouteImport,
} as any)
const BookRoute = BookRouteImport.update({
  id: '/book',
  path: '/book',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const BookChar123BookIdChar125Route =
  BookChar123BookIdChar125RouteImport.update({
    id: '/{-$bookId}',
    path: '/{-$bookId}',
    getParentRoute: () => BookRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/book': typeof BookRouteWithChildren
  '/form': typeof FormRoute
  '/book/{-$bookId}': typeof BookChar123BookIdChar125Route
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/book': typeof BookRouteWithChildren
  '/form': typeof FormRoute
  '/book/{-$bookId}': typeof BookChar123BookIdChar125Route
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/book': typeof BookRouteWithChildren
  '/form': typeof FormRoute
  '/book/{-$bookId}': typeof BookChar123BookIdChar125Route
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/book' | '/form' | '/book/{-$bookId}'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/book' | '/form' | '/book/{-$bookId}'
  id: '__root__' | '/' | '/book' | '/form' | '/book/{-$bookId}'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BookRoute: typeof BookRouteWithChildren
  FormRoute: typeof FormRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/form': {
      id: '/form'
      path: '/form'
      fullPath: '/form'
      preLoaderRoute: typeof FormRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/book': {
      id: '/book'
      path: '/book'
      fullPath: '/book'
      preLoaderRoute: typeof BookRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/book/{-$bookId}': {
      id: '/book/{-$bookId}'
      path: '/{-$bookId}'
      fullPath: '/book/{-$bookId}'
      preLoaderRoute: typeof BookChar123BookIdChar125RouteImport
      parentRoute: typeof BookRoute
    }
  }
}

interface BookRouteChildren {
  BookChar123BookIdChar125Route: typeof BookChar123BookIdChar125Route
}

const BookRouteChildren: BookRouteChildren = {
  BookChar123BookIdChar125Route: BookChar123BookIdChar125Route,
}

const BookRouteWithChildren = BookRoute._addFileChildren(BookRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BookRoute: BookRouteWithChildren,
  FormRoute: FormRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
